name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.repository }}-pages-workflow
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Move all root files content to under content directory
        run: |
          # Copy all files to .tmp-content
          mkdir -p .tmp-content
          cp -R * .tmp-content
          # Remove all files in the current directory except .tmp-content
          find . -mindepth 1 -maxdepth 1 ! -name '.tmp-content' -exec rm -rf {} +
          # Move .tmp-content back to content directory
          mv .tmp-content content

      - name: Clone remote repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/dwarvesf/web-engine.git
          cp -R web-engine/* ./
          rm -rf web-engine

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            app/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v5

      - name: Build static site
        run: pnpm build
        env:
          # This is the base path for the static site, adjust as needed
          REPO_CONTENT: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_PUBLIC_PAGES_BASE_PATH: ${{ steps.setup_pages.outputs.base_path }}
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
          NEXT_PUBLIC_EMAILER_API: ${{ secrets.NEXT_PUBLIC_EMAILER_API }}
          NEXT_PUBLIC_HUBSPOT_API: ${{ secrets.NEXT_PUBLIC_HUBSPOT_API }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
