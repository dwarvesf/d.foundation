name: Preview Deployment

on:
  pull_request:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write
  issues: write

# Allow concurrent deployments for preview branches
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Move all root files content to under content directory
        run: |
          # Copy all files to .tmp-content
          mkdir -p .tmp-content
          cp -R * .tmp-content
          # Remove all files in the current directory except .tmp-content and .git
          find . -mindepth 1 -maxdepth 1 ! -name '.tmp-content' ! -name '.git' -exec rm -rf {} +
          # Move .tmp-content back to content directory
          mv .tmp-content content

      - name: Clone remote repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/dwarvesf/web-engine.git
          cp -R web-engine/* ./
          rm -rf web-engine

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            app/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build static site
        run: pnpm build
        env:
          # This is the base path for the static site, adjust as needed
          REPO_CONTENT: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_PUBLIC_PAGES_BASE_PATH: /preview.d.foundation/${{ github.event.pull_request.head.ref }}
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
          NEXT_PUBLIC_EMAILER_API: ${{ secrets.NEXT_PUBLIC_EMAILER_API }}
          NEXT_PUBLIC_HUBSPOT_API: ${{ secrets.NEXT_PUBLIC_HUBSPOT_API }}

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        id: deploy
        with:
          folder: out
          target-folder: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.DWARVES_PAT }}
          repository-name: dwarvesf/preview.d.foundation

      - name: Add PR comment (Succeeded)
        if: success() && steps.deploy.outputs.deployment-status == 'success'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "preview-${{ github.event.pull_request.head.ref }}-deployed"
          message: |
            ### Preview Deployment Succeeded

            Preview URL: [Live Preview](https://dwarvesf.github.io/preview.d.foundation/${{ github.event.pull_request.head.ref }})

            View workflow run: [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Add PR comment (Skipped)
        if: success() && steps.deploy.outputs.deployment-status == 'skipped'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "preview-${{ github.event.pull_request.head.ref }}-deployed"
          message: |
            ### Preview Deployment Skipped

            View workflow run: [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Add PR comment (Failed)
        if: failure() || steps.deploy.outputs.deployment-status == 'failed'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "preview-${{ github.event.pull_request.head.ref }}-deployed"
          message: |
            ### Preview Deployment Failed

            View workflow run: [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
